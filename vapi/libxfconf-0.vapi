/* libxfconf-0.vapi generated by vapigen-0.48, do not modify. */

[CCode (cprefix = "Xfconf", gir_namespace = "Xfconf", gir_version = "0", lower_case_cprefix = "xfconf_g__")]
namespace Xfconf {
	[CCode (cheader_filename = "xfconf/xfconf.h", type_id = "xfconf_channel_get_type ()")]
	public class Channel : GLib.Object {
		[CCode (cname = "xfconf_channel_new", has_construct_function = false)]
		public Channel (string channel_name);
		[CCode (cname = "xfconf_channel_get")]
		[Version (since = "4.5.91")]
		public static Xfconf.Channel @get (string channel_name);
		[CCode (cname = "xfconf_channel_get_arrayv")]
		public GLib.GenericArray<weak GLib.Value?>? get_arrayv (string property);
		[CCode (cname = "xfconf_channel_get_bool")]
		public bool get_bool (string property, bool default_value);
		[CCode (cname = "xfconf_channel_get_double")]
		public double get_double (string property, double default_value);
		[CCode (cname = "xfconf_channel_get_int")]
		public int32 get_int (string property, int32 default_value);
		[CCode (cname = "xfconf_channel_get_named_struct")]
		public bool get_named_struct (string property, string struct_name, void* value_struct);
		[CCode (cname = "xfconf_channel_get_properties")]
		public GLib.HashTable<weak string,weak GLib.Value?> get_properties (string property_base);
		[CCode (cname = "xfconf_channel_get_property")]
		public bool get_property (string property, GLib.Value value);
		[CCode (cname = "xfconf_channel_get_string")]
		public string get_string (string property, string default_value);
		[CCode (array_length = false, array_null_terminated = true, cname = "xfconf_channel_get_string_list")]
		public string[] get_string_list (string property);
		[CCode (cname = "xfconf_channel_get_structv")]
		public bool get_structv (string property, void* value_struct, uint n_members, GLib.Type member_types);
		[CCode (cname = "xfconf_channel_get_uint")]
		public uint32 get_uint (string property, uint32 default_value);
		[CCode (cname = "xfconf_channel_get_uint64")]
		public uint64 get_uint64 (string property, uint64 default_value);
		[CCode (cname = "xfconf_channel_has_property")]
		public bool has_property (string property);
		[CCode (cname = "xfconf_channel_is_property_locked")]
		[Version (since = "4.5.91")]
		public bool is_property_locked (string property);
		[CCode (cname = "xfconf_channel_reset_property")]
		[Version (since = "4.5.91")]
		public void reset_property (string property_base, bool recursive);
		[CCode (cname = "xfconf_channel_set_arrayv")]
		public bool set_arrayv (string property, GLib.GenericArray<GLib.Value?> values);
		[CCode (cname = "xfconf_channel_set_bool")]
		public bool set_bool (string property, bool value);
		[CCode (cname = "xfconf_channel_set_double")]
		public bool set_double (string property, double value);
		[CCode (cname = "xfconf_channel_set_int")]
		public bool set_int (string property, int32 value);
		[CCode (cname = "xfconf_channel_set_named_struct")]
		public bool set_named_struct (string property, string struct_name, void* value_struct);
		[CCode (cname = "xfconf_channel_set_property")]
		public bool set_property (string property, GLib.Value value);
		[CCode (cname = "xfconf_channel_set_string")]
		public bool set_string (string property, string value);
		[CCode (cname = "xfconf_channel_set_string_list")]
		public bool set_string_list (string property, string values);
		[CCode (cname = "xfconf_channel_set_structv")]
		public bool set_structv (string property, void* value_struct, uint n_members, GLib.Type member_types);
		[CCode (cname = "xfconf_channel_set_uint")]
		public bool set_uint (string property, uint32 value);
		[CCode (cname = "xfconf_channel_set_uint64")]
		public bool set_uint64 (string property, uint64 value);
		[CCode (cname = "xfconf_channel_new_with_property_base", has_construct_function = false)]
		[Version (since = "4.5.92")]
		public Channel.with_property_base (string channel_name, string property_base);
		[NoAccessorMethod]
		public string channel_name { owned get; construct; }
		[NoAccessorMethod]
		public bool is_singleton { get; construct; }
		[NoAccessorMethod]
		public string property_base { owned get; construct; }
		public signal void property_changed (string property, GLib.Value value);
	}
	[CCode (cheader_filename = "xfconf/xfconf.h", type_id = "xfconf_int16_get_type ()")]
	public class Int16 {
		[CCode (has_construct_function = false)]
		protected Int16 ();
	}
	[CCode (cheader_filename = "xfconf/xfconf.h", type_id = "xfconf_uint16_get_type ()")]
	public class Uint16 {
		[CCode (has_construct_function = false)]
		protected Uint16 ();
	}
	[CCode (cheader_filename = "xfconf/xfconf.h", cprefix = "XFCONF_ERROR_")]
	public errordomain Error {
		UNKNOWN,
		[CCode (cname = "XFCONF_ERROR_CHANNEL_NOT_FOUND")]
		CHANNELNOTFOUND,
		[CCode (cname = "XFCONF_ERROR_PROPERTY_NOT_FOUND")]
		PROPERTYNOTFOUND,
		[CCode (cname = "XFCONF_ERROR_READ_FAILURE")]
		READFAILURE,
		[CCode (cname = "XFCONF_ERROR_WRITE_FAILURE")]
		WRITEFAILURE,
		[CCode (cname = "XFCONF_ERROR_PERMISSION_DENIED")]
		PERMISSIONDENIED,
		[CCode (cname = "XFCONF_ERROR_INTERNAL_ERROR")]
		INTERNALERROR,
		[CCode (cname = "XFCONF_ERROR_NO_BACKEND")]
		NOBACKEND,
		[CCode (cname = "XFCONF_ERROR_INVALID_PROPERTY")]
		INVALIDPROPERTY,
		[CCode (cname = "XFCONF_ERROR_INVALID_CHANNEL")]
		INVALIDCHANNEL
	}
	[CCode (cheader_filename = "xfconf/xfconf.h", cname = "xfconf_array_free")]
	public static void array_free (GLib.GenericArray<GLib.Value?> arr);
	[CCode (cheader_filename = "xfconf/xfconf.h", cname = "xfconf_get_error_quark")]
	public static GLib.Quark error_quark ();
	[CCode (cheader_filename = "xfconf/xfconf.h", cname = "xfconf_init")]
	public static bool init () throws GLib.Error;
	[CCode (array_length = false, array_null_terminated = true, cheader_filename = "xfconf/xfconf.h", cname = "xfconf_list_channels")]
	public static unowned string[] list_channels ();
	[CCode (cheader_filename = "xfconf/xfconf.h", cname = "xfconf_named_struct_register")]
	public static void named_struct_register (string struct_name, uint n_members, GLib.Type member_types);
	[CCode (cheader_filename = "xfconf/xfconf.h", cname = "xfconf_g_property_bind")]
	public static ulong property_bind (Xfconf.Channel channel, string xfconf_property, GLib.Type xfconf_property_type, void* object, string object_property);
	[CCode (cheader_filename = "xfconf/xfconf.h", cname = "xfconf_g_property_bind_gdkcolor")]
	public static ulong property_bind_gdkcolor (Xfconf.Channel channel, string xfconf_property, void* object, string object_property);
	[CCode (cheader_filename = "xfconf/xfconf.h", cname = "xfconf_g_property_bind_gdkrgba")]
	[Version (since = "4.12.1")]
	public static ulong property_bind_gdkrgba (Xfconf.Channel channel, string xfconf_property, void* object, string object_property);
	[CCode (cheader_filename = "xfconf/xfconf.h", cname = "xfconf_g_property_unbind")]
	public static void property_unbind (ulong id);
	[CCode (cheader_filename = "xfconf/xfconf.h", cname = "xfconf_g_property_unbind_all")]
	public static void property_unbind_all (void* channel_or_object);
	[CCode (cheader_filename = "xfconf/xfconf.h", cname = "xfconf_g_property_unbind_by_property")]
	public static void property_unbind_by_property (Xfconf.Channel channel, string xfconf_property, void* object, string object_property);
	[CCode (cheader_filename = "xfconf/xfconf.h", cname = "xfconf_shutdown")]
	public static void shutdown ();
	[CCode (cheader_filename = "xfconf/xfconf.h", cname = "xfconf_g_value_get_int16")]
	public static int16 value_get_int16 (GLib.Value value);
	[CCode (cheader_filename = "xfconf/xfconf.h", cname = "xfconf_g_value_get_uint16")]
	public static uint16 value_get_uint16 (GLib.Value value);
	[CCode (cheader_filename = "xfconf/xfconf.h", cname = "xfconf_g_value_set_int16")]
	public static void value_set_int16 (GLib.Value value, int16 v_int16);
	[CCode (cheader_filename = "xfconf/xfconf.h", cname = "xfconf_g_value_set_uint16")]
	public static void value_set_uint16 (GLib.Value value, uint16 v_uint16);
}
